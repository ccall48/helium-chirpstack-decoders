{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Helium Chirpstack Decoders","text":"<p>Discord link to join the LoRaWAN Communities Server.</p>"},{"location":"devices/RAK/RAK10701/RAK10701/","title":"RAK10701","text":""},{"location":"devices/RAK/RAK10701/RAK10701/#rak10701","title":"RAK10701","text":"<p>The RAK10701-P Field Tester for LoRaWAN is a ready-to-use WisNode for evaluating deployed LoRaWAN network, which comes in a hard case and two different antenna types. It has a GNSS and a touchscreen LCD for the user interface, which displays the number of gateways the device can reach and other parameters like approximate distance, RSSI, and SNR. It is powered by a rechargeable battery and can be charged via USB Type-C interface.</p> <p></p> <p></p> <p>RAK10701</p>"},{"location":"devices/RAK/RAK10701/RAK10701/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/RAK/RAK5205-RAK7205/RAK5205-RAK7205/","title":"RAK5205 RAK7205","text":""},{"location":"devices/RAK/RAK5205-RAK7205/RAK5205-RAK7205/#rak5205-rak7205","title":"RAK5205 - RAK7205","text":"<p>The RAK5205 WisTrio LPWAN Tracker board is built on the Semtech SX1276 chip, with the STM32L1 MCU at its core. It is a feature-packed sensor board with LoRa connectivity and built-in GPS. It provides various interfaces for easy application development.</p> <p></p> <p>RAK7205</p>"},{"location":"devices/RAK/RAK5205-RAK7205/RAK5205-RAK7205/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/RAK/RAK5205-RAK7205/RAK612/","title":"RAK612","text":""},{"location":"devices/RAK/RAK5205-RAK7205/RAK612/#rak612","title":"RAK612","text":"<p>The RAK612 WisNode Button is a remote wireless trigger device. It supports user-defined functions for each key and is based on the LoRaWAN 1.0.2 standard. All prevailing LoRaWAN bands are supported: EU433, CN470, IN865, EU868, AU915, US915, KR920, and AS923.</p> <p></p> <p>RAK612</p>"},{"location":"devices/RAK/RAK5205-RAK7205/RAK612/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/RAK/RAK7200/RAK7200/","title":"RAK7200","text":""},{"location":"devices/RAK/RAK7200/RAK7200/#rak7200-gps-tracker","title":"RAK7200 GPS Tracker","text":"<p>The RAK7200 WisNode Track Lite device is the best available prototyping LoRa sensor device with built-in 3.7 V rechargeable Li-ion battery and GPS modem.</p> <p></p> <p>RAK7200</p>"},{"location":"devices/RAK/RAK7200/RAK7200/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/RAK/RAK7201/RAK7201/","title":"RAK7201","text":""},{"location":"devices/RAK/RAK7201/RAK7201/#rak7201","title":"RAK7201","text":"<p>The RAK7201 WisNode Button 4K is a remote wireless trigger device. It supports user-defined functions for each key and is based on the LoRaWAN 1.0.2 protocol. Supported LoRaWAN bands are IN865, EU868, AU915, US915, KR920, and AS923.</p> <p></p> <p>RAK7201</p>"},{"location":"devices/RAK/RAK7201/RAK7201/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/RAK/RAK7204/RAK7204/","title":"RAK7204","text":""},{"location":"devices/RAK/RAK7204/RAK7204/#rak7204","title":"RAK7204","text":"<p>The RAK7204 is an LPWAN node with integrated environmental sensors. The high-precision environmental sensors, can measure changes in temperature, humidity, gas pressure and provide an indoor air quality index. All the accumulated data can be send to a gateway in order for it to be forwarded to the Cloud.</p> <p></p> <p>RAK7204</p>"},{"location":"devices/RAK/RAK7204/RAK7204/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/RAK/RAK7271/RAK7271/","title":"RAK7271","text":""},{"location":"devices/RAK/RAK7271/RAK7271/#rak7271","title":"RAK7271","text":"<p>The RAK Developer Base is a device designed for integration with desktop/mobile/embedded systems that converts the RAK2287/RAK5146 mPCIe LoRa concentrator modules into USB Type C pluggable (via the include Type C to A cable).</p> <p></p> <p>RAK7271</p>"},{"location":"devices/RAK/RAK7271/RAK7271/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/RAK/RAK7431/RAK7431/","title":"RAK7431","text":""},{"location":"devices/RAK/RAK7431/RAK7431/#rak7431","title":"RAK7431","text":"<p>WisNode Bridge Serial (RAK7431) is a Modbus RS485 to LoRaWAN\u00ae bridge designed for industrial applications.</p> <p></p> <p>RAK7431</p>"},{"location":"devices/RAK/RAK7431/RAK7431/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/RAK/RAK7432-RAK7434/RAK7432-RAK7434/","title":"RAK7432 RAK7434","text":""},{"location":"devices/RAK/RAK7432-RAK7434/RAK7432-RAK7434/#rak7432-rak7434","title":"RAK7432 - RAK7434","text":"<p>RAK7432/RAK7434 WisNode Bridge Analogs are analog to LoRaWAN converters designed for industrial applications. These can read values from devices supporting the current loop.</p> <p></p> <p>RAK7432</p>"},{"location":"devices/RAK/RAK7432-RAK7434/RAK7432-RAK7434/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/SenseCAP/s2100/device/","title":"Device","text":""},{"location":"devices/SenseCAP/s2100/device/#sensecap-s2100","title":"SenseCAP S2100","text":"<p>SenseCAP S2100 Data Logger can connect to MODBUS-RTU RS485/Analog/GPIO sensors and transmit data from sensors to the LoRaWAN network. Benefits from LoRa and IP66 design, this device features stability and reliability and can cover a long transmission range while keeping ultra-low power consumption, ideal for outdoor use. It is specifically optimized for OTA with built-in Bluetooth, which enables quick setup and update. It can be battery-powered or connected to a 12V external power supply. When the 12V power supply is connected, the replaceable built-in battery is set to be used as the backup power supply. What's more, with the help of S2110 converter, S2100 Data Logger is able to connect to Grove Sensor, it is an ideal solution for developing, fast prototyping, and small deployment for DIY Industrial level LoRaWAN Sensors.</p> <p>SenseCAP S2100</p>"},{"location":"devices/SenseCAP/s2100/device/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <p>Uplink Decoder Downlink Decoder</p> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/SenseCAP/s2100/downlink/","title":"Downlink","text":""},{"location":"devices/SenseCAP/s2100/downlink/#s2100-datalogger","title":"S2100 Datalogger","text":""},{"location":"devices/SenseCAP/s2100/downlink/#set-the-data-uplink-interval","title":"Set the Data Uplink Interval","text":"<p>0x80 0x00 0x00 duty_H duty_L</p> <p>Example: Set the Node\u2019s data interval is 10 minutes. Send the downlink command (HEX) via FPort=3: <code>80 00 00 00 0A</code></p>"},{"location":"devices/SenseCAP/s2100/downlink/#command-list","title":"Command List","text":"<p>0x80    Fixed field 0x00    Fixed field 0x00    Fixed field duty_L  Data interval low byte, you can set the data interval, unit: minute duty_H  Data interval high byte, you can set the data interval, unit: minute</p>"},{"location":"devices/SenseCAP/s2100/downlink/#change-uplink-interval","title":"Change Uplink Interval","text":"<p>Set Uplink interval = 1 minute <code>8000000001</code><p></p> Set Uplink interval = 5 minutes <code>8000000005</code><p></p> Set Uplink interval = 10 minutes <code>800000000A</code><p></p> Set Uplink interval = 15 minutes <code>800000000F</code><p></p> Set Uplink interval = 20 minutes <code>8000000014</code><p></p> Set Uplink interval = 30 minutes <code>800000001E</code><p></p> Set Uplink interval = 60 minutes <code>800000003C</code></p>"},{"location":"devices/SenseCAP/s2100/uplink/","title":"Uplink","text":""},{"location":"devices/SenseCAP/s2100/uplink/#sensecap-s2100","title":"SenseCAP S2100","text":""},{"location":"devices/SenseCAP/s2100/uplink/#example-uplink-decoder","title":"Example Uplink Decoder","text":"<pre><code>function decodeUplink(input) {\n    let data = buf2Hex(input.bytes);\n    let numMeasure = data.substring(0, 6);\n    let metrics = data.substring(data.lastIndexOf(39));\n    let decoded = {};\n\n    switch (numMeasure) {\n        case '311001':\n            // TODO: one measurement\n            break;\n        case '311202':\n            // TODO: two measurements\n            break;\n        case '301202':\n            // TODO: three or four measurements\n            decoded.ambient = hex2int(data.substring(6, 14)) / 10000;\n            decoded.compressor = hex2int(data.substring(14, 22)) / 1000;\n            decoded.defrost = hex2int(data.substring(28, 36)) / 1000;\n            break;\n        case '301203':\n            // TODO: five or six measurements\n            break;\n        default:\n            break;\n    }\n\n    if (metrics.length === 20) {\n        decoded.battery = hex2int(metrics.substring(2, 4));\n        decoded.upInterval = hex2int(metrics.substring(12, 16));\n    }\n    return {data: decoded};\n}\n\nfunction buf2Hex(buffer) {\n    return [...new Uint8Array(buffer)]\n        .map (b =&gt; b.toString(16).padStart (2, '0'))\n        .join ('');\n}\n\nfunction hex2int(hex) {\n    return parseInt(hex, 16);\n}\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/CPL01/CPL01/","title":"CPL01","text":""},{"location":"devices/dragino/CPL01/CPL01/#cpl01","title":"CPL01","text":"<p>Outdoor LoRaWAN Open/Close Dry Contact Sensor</p> <p></p> <p>CPL01</p>"},{"location":"devices/dragino/CPL01/CPL01/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/GroPoint-Air/GroPoint-Air/","title":"GroPoint Air","text":""},{"location":"devices/dragino/GroPoint-Air/GroPoint-Air/#gropoint-air","title":"GroPoint-Air","text":"<p>LoRaWAN Multi Segment Soil Sensor Converter</p> <p></p> <p>GroPoint-Air</p>"},{"location":"devices/dragino/GroPoint-Air/GroPoint-Air/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LA66/LA66-USB/","title":"LA66 USB","text":""},{"location":"devices/dragino/LA66/LA66-USB/#la66-usb","title":"LA66 USB","text":"<p>LA66 USB LoRaWAN Adapter</p> <p>LA66 USB</p>"},{"location":"devices/dragino/LA66/LA66-USB/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LA66/LA66-shield/","title":"LA66 shield","text":""},{"location":"devices/dragino/LA66/LA66-shield/#la66-shield","title":"LA66 Shield","text":"<p>LA66 LoRaWAN Shield</p> <p>LA66 Shield</p>"},{"location":"devices/dragino/LA66/LA66-shield/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LAQ4/LAQ4/","title":"LAQ4","text":""},{"location":"devices/dragino/LAQ4/LAQ4/#laq4","title":"LAQ4","text":"<p>LoRaWAN Air Quality Sensor</p> <p></p> <p>LAQ4</p>"},{"location":"devices/dragino/LAQ4/LAQ4/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LDDS/LDDS04/","title":"LDDS04","text":""},{"location":"devices/dragino/LDDS/LDDS04/#ldds04","title":"LDDS04","text":"<p>LoRaWAN 4-Channels Distance Detection Sensor</p> <p></p> <p>LDDS04</p>"},{"location":"devices/dragino/LDDS/LDDS04/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LDDS/LDDS20/","title":"LDDS20","text":""},{"location":"devices/dragino/LDDS/LDDS20/#ldds20","title":"LDDS20","text":"<p>LoRaWAN Liquid Level Sensor</p> <p></p> <p>LDDS20</p>"},{"location":"devices/dragino/LDDS/LDDS20/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LDDS/LDDS40/","title":"LDDS40","text":""},{"location":"devices/dragino/LDDS/LDDS40/#ldds40","title":"LDDS40","text":"<p>LoRaWAN LiDAR ToF Distance Sensor</p> <p></p> <p>LDDS40</p>"},{"location":"devices/dragino/LDDS/LDDS40/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LDDS/LDDS45/","title":"LDDS45","text":""},{"location":"devices/dragino/LDDS/LDDS45/#ldds45","title":"LDDS45","text":"<p>LoRaWAN Distance Detection Sensor</p> <p></p> <p>LDDS45</p>"},{"location":"devices/dragino/LDDS/LDDS45/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LDS/LDS01/","title":"LDS01","text":""},{"location":"devices/dragino/LDS/LDS01/#lds01","title":"LDS01","text":"<p>LoRaWAN Door Sensor - Replaced by LDS02</p> <p></p> <p>LDS01</p>"},{"location":"devices/dragino/LDS/LDS01/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LDS/LDS02/","title":"LDS02","text":""},{"location":"devices/dragino/LDS/LDS02/#lds02","title":"LDS02","text":"<p>LoRaWAN Door Sensor</p> <p></p> <p>LDS02</p>"},{"location":"devices/dragino/LDS/LDS02/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LDS/LDS03A/","title":"LDS03A","text":""},{"location":"devices/dragino/LDS/LDS03A/#lds03a","title":"LDS03A","text":"<p>Outdoor LoRaWAN Open/Close Door Sensor</p> <p></p> <p>LDS03A</p>"},{"location":"devices/dragino/LDS/LDS03A/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LHT/LHT52/","title":"LHT52","text":""},{"location":"devices/dragino/LHT/LHT52/#lht52","title":"LHT52","text":"<p>Indoor LoRaWAN Temperature &amp; Humidity Sensor</p> <p></p> <p>LHT52</p>"},{"location":"devices/dragino/LHT/LHT52/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LHT/LHT65/","title":"LHT65","text":""},{"location":"devices/dragino/LHT/LHT65/#lht65","title":"LHT65","text":"<p>LoRaWAN Temperature &amp; Humidity Sensor</p> <p></p> <p>LHT65</p>"},{"location":"devices/dragino/LHT/LHT65/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LHT/LHT65N-E5/","title":"LHT65N E5","text":""},{"location":"devices/dragino/LHT/LHT65N-E5/#lht65n-e5","title":"LHT65N-E5","text":"<p>LoRaWAN Temperature, Humidity &amp; Illuminance Sensor</p> <p></p> <p>LHT65N-E5</p>"},{"location":"devices/dragino/LHT/LHT65N-E5/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LHT/LHT65N-NE117/","title":"LHT65N NE117","text":""},{"location":"devices/dragino/LHT/LHT65N-NE117/#lht65n-ne117","title":"LHT65N-NE117","text":"<p>LoRaWAN Temperature &amp; Humidity Sensor</p> <p></p> <p>LHT65N-NE117</p>"},{"location":"devices/dragino/LHT/LHT65N-NE117/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LHT/LHT65N/","title":"LHT65N","text":""},{"location":"devices/dragino/LHT/LHT65N/#lht65n","title":"LHT65N","text":"<p>LoRaWAN Temperature &amp; Humidity Sensor</p> <p></p> <p>LHT65N</p>"},{"location":"devices/dragino/LHT/LHT65N/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LLMS01/LLMS01/","title":"LLMS01","text":""},{"location":"devices/dragino/LLMS01/LLMS01/#llms01","title":"LLMS01","text":"<p>LoRaWAN Leaf Moisture Sensor</p> <p></p> <p>LLMS01</p>"},{"location":"devices/dragino/LLMS01/LLMS01/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LMDS200/LMDS200/","title":"LMDS200","text":""},{"location":"devices/dragino/LMDS200/LMDS200/#lmds200","title":"LMDS200","text":"<p>LoRaWAN Microwave Radar Distance Detection Sensor</p> <p></p> <p>LMDS200</p>"},{"location":"devices/dragino/LMDS200/LMDS200/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LSE01/LSE01/","title":"LSE01","text":""},{"location":"devices/dragino/LSE01/LSE01/#lse01","title":"LSE01","text":"<p>LoRaWAN Soil Moisture &amp; EC Sensor</p> <p></p> <p>LSE01</p>"},{"location":"devices/dragino/LSE01/LSE01/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LSN50v2/LSN50v2-D20/","title":"LSN50v2 D20","text":""},{"location":"devices/dragino/LSN50v2/LSN50v2-D20/#lsn50v2-d20","title":"LSN50v2-D20","text":"<p>LoRaWAN Waterproof /Outdoor Temperature Sensor</p> <p></p> <p>LSN50v2-D20</p>"},{"location":"devices/dragino/LSN50v2/LSN50v2-D20/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LSN50v2/LSN50v2-D22/","title":"LSN50v2 D22","text":""},{"location":"devices/dragino/LSN50v2/LSN50v2-D22/#lsn50v2-d22","title":"LSN50v2-D22","text":"<p>LoRaWAN Waterproof /Outdoor Temperature Sensor</p> <p></p> <p>LSN50v2-D22</p>"},{"location":"devices/dragino/LSN50v2/LSN50v2-D22/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LSN50v2/LSN50v2-D23/","title":"LSN50v2 D23","text":""},{"location":"devices/dragino/LSN50v2/LSN50v2-D23/#lsn50v2-d23","title":"LSN50v2-D23","text":"<p>LoRaWAN Waterproof /Outdoor Temperature Sensor</p> <p></p> <p>LSN50v2-D23</p>"},{"location":"devices/dragino/LSN50v2/LSN50v2-D23/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LSN50v2/LSN50v2-S31/","title":"LSN50v2 S31","text":""},{"location":"devices/dragino/LSN50v2/LSN50v2-S31/#lsn50v2-s31","title":"LSN50v2-S31","text":"<p>LoRaWAN Temperature &amp; Humidity Sensor</p> <p></p> <p>LSN50v2-S31</p>"},{"location":"devices/dragino/LSN50v2/LSN50v2-S31/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LSN50v2/LSN50v2-S31B/","title":"LSN50v2 S31B","text":""},{"location":"devices/dragino/LSN50v2/LSN50v2-S31B/#lsn50v2-s31b","title":"LSN50v2-S31B","text":"<p>LoRaWAN Temperature &amp; Humidity Sensor</p> <p></p> <p>LSN50v2-S31B</p>"},{"location":"devices/dragino/LSN50v2/LSN50v2-S31B/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LSPH01/LSPH01/","title":"LSPH01","text":""},{"location":"devices/dragino/LSPH01/LSPH01/#lsph01","title":"LSPH01","text":"<p>LoRaWAN Soil pH Sensor</p> <p></p> <p>LSPH01</p>"},{"location":"devices/dragino/LSPH01/LSPH01/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LTC2/LTC2/","title":"LTC2","text":""},{"location":"devices/dragino/LTC2/LTC2/#ltc2","title":"LTC2","text":"<p>Industrial LoRaWAN Temperature Transmitter</p> <p></p> <p>LTC2</p>"},{"location":"devices/dragino/LTC2/LTC2/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LWL/LWL01/","title":"LWL01","text":""},{"location":"devices/dragino/LWL/LWL01/#lwl01","title":"LWL01","text":"<p>LoRaWAN Water Leak - Replaced by LWL02</p> <p></p> <p>LWL01</p>"},{"location":"devices/dragino/LWL/LWL01/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LWL/LWL02/","title":"LWL02","text":""},{"location":"devices/dragino/LWL/LWL02/#lwl02","title":"LWL02","text":"<p>LoRaWAN Water Leak</p> <p></p> <p>LWL02</p>"},{"location":"devices/dragino/LWL/LWL02/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/LWL/LWL03A/","title":"LWL03A","text":""},{"location":"devices/dragino/LWL/LWL03A/#lwl03a","title":"LWL03A","text":"<p>LoRaWAN None-Position Rope Type Water Leak Controller</p> <p></p> <p>LWL03A</p>"},{"location":"devices/dragino/LWL/LWL03A/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/SW3L/SW3L/","title":"SW3L","text":""},{"location":"devices/dragino/SW3L/SW3L/#sw3l","title":"SW3L","text":"<p>LoRaWAN Outdoor Flow Sensor</p> <p></p> <p>SW3L</p>"},{"location":"devices/dragino/SW3L/SW3L/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/dragino/TrackerD/TrackerD/","title":"TrackerD","text":""},{"location":"devices/dragino/TrackerD/TrackerD/#trackerd","title":"TrackerD","text":"<p>LoRaWAN Tracker</p> <p></p> <p>TrackerD</p>"},{"location":"devices/dragino/TrackerD/TrackerD/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>TBA...\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/milesight/em300-th/device/","title":"Device","text":""},{"location":"devices/milesight/em300-th/device/#em300-th","title":"EM300-TH","text":"<p>Temperature &amp; Humidity Sensor</p> <p>IP67 Waterproof LoRaWAN\u00ae Wireless 5/10 Years Battery Life NFC for Configuring</p> <p>EM300-TH</p>"},{"location":"devices/milesight/em300-th/device/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <p>Uplink Decoder Downlink Decoder</p> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/milesight/em300-th/downlink/","title":"Downlink","text":""},{"location":"devices/milesight/em300-th/downlink/#em300-th-downlink","title":"EM300-TH Downlink","text":""},{"location":"devices/milesight/em300-th/downlink/#restart-device","title":"Restart Device","text":""},{"location":"devices/milesight/em300-th/downlink/#change-reporting-interval","title":"Change Reporting Interval","text":""},{"location":"devices/milesight/em300-th/uplink/","title":"Uplink","text":""},{"location":"devices/milesight/em300-th/uplink/#em300-th","title":"EM300-TH","text":""},{"location":"devices/milesight/em300-th/uplink/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>/*\n * Payload Decoder for Chirpstack and Milesight network server\n *\n * Copyright 2021 Milesight IoT\n * Editied Cory Callcott, cory@callref.com.au to work chirpstack v4\n *\n * @product EM300-TH\n */\nfunction decodeUplink(input) {\n    let bytes = input.bytes;\n    let decoded = {};\n\n    for (let i = 0; i &lt; bytes.length;) {\n        let channel_id = bytes[i++];\n        let channel_type = bytes[i++];\n\n        // BATTERY\n        if (channel_id === 0x01 &amp;&amp; channel_type === 0x75) {\n            decoded.battery = bytes[i];\n            i += 1;\n        }\n        // TEMPERATURE\n        else if (channel_id === 0x03 &amp;&amp; channel_type === 0x67) {\n            // \u2103\n            decoded.temperature = readInt16LE(bytes.slice(i, i + 2)) / 10;\n            i += 2;\n\n            // \u2109\n            // decoded.temperature = readInt16LE(bytes.slice(i, i + 2)) / 10 * 1.8 + 32;\n            // i +=2;\n        }\n        // HUMIDITY\n        else if (channel_id === 0x04 &amp;&amp; channel_type === 0x68) {\n            decoded.humidity = bytes[i] / 2;\n            i += 1;\n        } else {\n            break;\n        }\n    }\n    return {data: decoded};\n}\n\n/* ******************************************\n * bytes to number\n ********************************************/\nfunction readUInt16LE(bytes) {\n    let value = (bytes[1] &lt;&lt; 8) + bytes[0];\n    return value &amp; 0xffff;\n}\n\nfunction readInt16LE(bytes) {\n    let ref = readUInt16LE(bytes);\n    return ref &gt; 0x7fff ? ref - 0x10000 : ref;\n}\n\n// Encode downlink function.\n//\n// Input is an object with the following fields:\n// - data = Object representing the payload that must be encoded.\n// - variables = Object containing the configured device variables.\n//\n// Output must be an object with the following fields:\n// - bytes = Byte array containing the downlink payload.\n\nfunction encodeDownlink(input) {\n    let port = input.fPort;\n    let downlink = input.bytes;\n    return {bytes: downlink, fPort: port};\n}\n\n</code></pre> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/vega/si-11/device/","title":"Device","text":""},{"location":"devices/vega/si-11/device/#vega-si-11-pulsecounter","title":"Vega SI-11 Pulsecounter","text":""},{"location":"devices/vega/si-11/device/#description","title":"Description","text":"<p>Vega SI-11 pulse counter is designed for counting of pulses incoming to 4 independent inputs, further accumulating and transmitting of this information via the LoRaWAN\u00ae protocol to the gateway through wireless communication within 860-1000 MHz frequency plan.</p> <p>Vega SI-11</p>"},{"location":"devices/vega/si-11/device/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <p>Uplink Decoder Downlink Decoder</p> <p>Please submit pull request to main repository to report/repair any bad links or to provide additional documentation or node reviews.</p>"},{"location":"devices/vega/si-11/uplink/","title":"Uplink","text":""},{"location":"devices/vega/si-11/uplink/#vega-si-11-pulsecounter-decoder","title":"Vega SI-11 Pulsecounter Decoder","text":""},{"location":"devices/vega/si-11/uplink/#example-payload-decoders","title":"Example Payload Decoders","text":"<p>Cayenne compatible: Yes/No/Unknown</p> <pre><code>/****************************************************************************************\nv1.4 cory callcott -&gt; cory@callref.com.au\nconstruct byte packet decoder for 24bytes sent from vega-si11 device\n*****************************************************************************************/\nfunction decodeUplink(input) {\n    let bytes = input.bytes;\n    let decoded = {}\n    /*\n    Convert bytes to get raw values and pulses from pulse counter\n    */\n    decoded.pktType  = bytes[0];\n    decoded.battery  = bytes[1];\n    decoded.values   = bytes[2];\n    decoded.readTime = bytes[6] &lt;&lt; 24 | bytes[5] &lt;&lt; 16 | bytes[4] &lt;&lt; 8 | bytes[3];\n    decoded.ambient  = bytes[7];\n    /*\n    Pulses can be setup as 4 x pulse counters or as secuity guards.\n    Adjust to suit desired application.\n    */\n    decoded.pulse_1 = ((bytes[11]&lt;&lt;24|bytes[10]&lt;&lt;16|bytes[9]&lt;&lt;8|bytes[8]) * 5) / 1000;\n    decoded.pulse_2 = ((bytes[15]&lt;&lt;24|bytes[14]&lt;&lt;16|bytes[13]&lt;&lt;8|bytes[12]) * 5) / 1000;\n    decoded.pulse_3 = ((bytes[19]&lt;&lt;24|bytes[18]&lt;&lt;16|bytes[17]&lt;&lt;8|bytes[16]) * 5) / 1000;\n    decoded.pulse_4 = ((bytes[23]&lt;&lt;24|bytes[22]&lt;&lt;16|bytes[21]&lt;&lt;8|bytes[20]) * 5) / 1000;\n\n    return {data: decoded};\n}\n\n/*****************************************\n* downlink function not set or tested\n******************************************/\nfunction encodeDownlink(input) {\n    let port = input.fPort;\n    let bytes = input.bytes;\n    return {data: bytes, fPort: port};\n}\n</code></pre> <p>{% include '' %}</p>"}]}